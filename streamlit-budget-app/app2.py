import streamlit as st
import pandas as pd
#from IPython.display import display, Markdown
    
#-------------------------------------------------------------------------------

# --- ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö ---
st.set_page_config(page_title="Dashboard ‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì", layout="wide")

# --- ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Excel ---
@st.cache_data
def load_data():
    file_path = "q1-68.xlsx"
    df = pd.read_excel(file_path, dtype=str, engine="openpyxl")

    # ‡πÅ‡∏õ‡∏•‡∏á‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç
    num_cols = ["‡∏û‡∏£‡∏ö.", "‡∏á‡∏ö‡∏Ø ‡∏´‡∏•‡∏±‡∏á‡πÇ‡∏≠‡∏ô", "‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢", "%‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢", "‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢", "%‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢"]
    df[num_cols] = df[num_cols].apply(pd.to_numeric, errors='coerce')

    # ‡πÅ‡∏õ‡∏•‡∏á‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏à‡∏≤‡∏Å‡∏ö‡∏≤‡∏ó‡πÄ‡∏õ‡πá‡∏ô‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó
    df["‡∏û‡∏£‡∏ö.(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)"] = df["‡∏û‡∏£‡∏ö."] / 1_000_000
    df["‡∏á‡∏ö‡∏Ø ‡∏´‡∏•‡∏±‡∏á‡πÇ‡∏≠‡∏ô(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)"] = df["‡∏á‡∏ö‡∏Ø ‡∏´‡∏•‡∏±‡∏á‡πÇ‡∏≠‡∏ô"] / 1_000_000
    df["‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)"] = df["‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢"] / 1_000_000
    df["‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)"] = df["‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢"] / 1_000_000

    return df

df1 = load_data()

# --- ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡πà‡∏≠‡∏ô ---
if df1.empty:
    st.error("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡πÑ‡∏ü‡∏•‡πå Excel")
    st.stop()

st.markdown("""
    <div style='
        background-color: #AC1B1F;
        color: black;
        text-align: center;
        padding: 1rem;
        font-size: 30px;
        font-weight: 700;
        border-radius: 6px;
        margin-top: 2rem;
        margin-bottom: 2rem;
    '>
        ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢‡πÅ‡∏•‡∏∞‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì ‡∏ì ‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î‡πÑ‡∏ï‡∏£‡∏°‡∏≤‡∏™‡∏ó‡∏µ‡πà 1 ‡∏õ‡∏µ‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì ‡∏û.‡∏®. 2568
    </div>
""", unsafe_allow_html=True)

#----------------------------------------------------------------------------------
# üü† ‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà 1: ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏°/‡∏õ‡∏£‡∏∞‡∏à‡∏≥/‡∏•‡∏á‡∏ó‡∏∏‡∏ô
st.markdown("""
    <style>
    * {
        font-family: "Segoe UI", sans-serif !important;
    }
    .block-container {
        padding-top: 2rem;
    }
    .uniform-font {
        font-size: 35px;
        font-weight: 700;
        margin-bottom: 1rem;
    }
    .sub-header {
        font-size: 27px;
        font-weight: 600;
        margin-top: 1rem;
        margin-bottom: 0.75rem;
    }
    .section-title {
        font-size: 20px;
        font-weight: 600;
        margin-top: 0.75rem;
        margin-bottom: 0.5rem;
    }
    .uniform-percent {
        font-size: 37px;
        font-weight: bold;
    }
    .metric-label {
        font-size: 16px;
        font-weight: 500;
    }
    </style>
""", unsafe_allow_html=True)

st.markdown("<div class='uniform-font'>1Ô∏è‚É£üü†‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®</div>", unsafe_allow_html=True)

def colored_text(value, color):
    return f"<span class='uniform-percent' style='color:{color}'>{value:.2f} %</span>"

# --- ‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏° ---
st.markdown("<div class='sub-header'>üèõÔ∏è ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏°</div>", unsafe_allow_html=True)
col1, col2, col3 = st.columns(3)

total_prb = round(df1['‡∏û‡∏£‡∏ö.(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)'].sum(), 4)
total_after = round(df1['‡∏á‡∏ö‡∏Ø ‡∏´‡∏•‡∏±‡∏á‡πÇ‡∏≠‡∏ô(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)'].sum(), 4)
total_disb = round(df1['‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)'].sum(), 4)
total_spend = round(df1['‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)'].sum(), 4)
percent_disb = round((total_disb / total_after) * 100, 2) if total_after else 0
percent_spend = round((total_spend / total_after) * 100, 2) if total_after else 0

color_disb = "green" if percent_disb > 27 else "red"
color_spend = "green" if percent_spend > 37 else "red"

with col1:
    st.metric("‡∏û‡∏£‡∏ö.", f"{total_prb:,.4f}")
    st.metric("‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢", f"{total_spend:,.4f}")
with col2:
    st.metric("‡∏á‡∏ö‡∏Ø ‡∏´‡∏•‡∏±‡∏á‡πÇ‡∏≠‡∏ô", f"{total_after:,.4f}")
    st.markdown("<div class='metric-label'> %‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢</div>", unsafe_allow_html=True)
    st.markdown(colored_text(percent_disb, color_disb), unsafe_allow_html=True)
with col3:
    st.metric("‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢", f"{total_disb:,.4f}")
    st.markdown("<div class='metric-label'> %‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢</div>", unsafe_allow_html=True)
    st.markdown(colored_text(percent_spend, color_spend), unsafe_allow_html=True)

# --- ‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏õ‡∏£‡∏∞‡∏à‡∏≥ ---
st.markdown("<div class='sub-header'>üìú ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏õ‡∏£‡∏∞‡∏à‡∏≥</div>", unsafe_allow_html=True)
df_regular = df1[df1['‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏õ‡∏£‡∏∞‡∏à‡∏≥/‡∏•‡∏á‡∏ó‡∏∏‡∏ô'] == "‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏õ‡∏£‡∏∞‡∏à‡∏≥"]
prb_r = round(df_regular['‡∏û‡∏£‡∏ö.(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)'].sum(), 4)
after_r = round(df_regular['‡∏á‡∏ö‡∏Ø ‡∏´‡∏•‡∏±‡∏á‡πÇ‡∏≠‡∏ô(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)'].sum(), 4)
disb_r = round(df_regular['‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)'].sum(), 4)
spend_r = round(df_regular['‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)'].sum(), 4)
percent_disb_r = round((disb_r / after_r) * 100, 2) if after_r else 0
percent_spend_r = round((spend_r / after_r) * 100, 2) if after_r else 0

color_disb_r = "green" if percent_disb_r > 35 else "red"
color_spend_r = "green" if percent_spend_r > 36 else "red"

col1, col2, col3 = st.columns(3)
with col1:
    st.metric("‡∏û‡∏£‡∏ö. (‡∏õ‡∏£‡∏∞‡∏à‡∏≥)", f"{prb_r:,.4f}")
    st.metric("‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢", f"{spend_r:,.4f}")
with col2:
    st.metric("‡∏á‡∏ö‡∏Ø ‡∏´‡∏•‡∏±‡∏á‡πÇ‡∏≠‡∏ô", f"{after_r:,.4f}")
    st.markdown("<div class='metric-label'> %‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢</div>", unsafe_allow_html=True)
    st.markdown(colored_text(percent_disb_r, color_disb_r), unsafe_allow_html=True)
with col3:
    st.metric("‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢", f"{disb_r:,.4f}")
    st.markdown("<div class='metric-label'> %‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢</div>", unsafe_allow_html=True)
    st.markdown(colored_text(percent_spend_r, color_spend_r), unsafe_allow_html=True)

# --- ‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏•‡∏á‡∏ó‡∏∏‡∏ô ---
st.markdown("<div class='sub-header'>üèóÔ∏è ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏•‡∏á‡∏ó‡∏∏‡∏ô</div>", unsafe_allow_html=True)
df_invest = df1[df1['‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏õ‡∏£‡∏∞‡∏à‡∏≥/‡∏•‡∏á‡∏ó‡∏∏‡∏ô'] == "‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏•‡∏á‡∏ó‡∏∏‡∏ô"]
prb_i = round(df_invest['‡∏û‡∏£‡∏ö.(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)'].sum(), 4)
after_i = round(df_invest['‡∏á‡∏ö‡∏Ø ‡∏´‡∏•‡∏±‡∏á‡πÇ‡∏≠‡∏ô(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)'].sum(), 4)
disb_i = round(df_invest['‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)'].sum(), 4)
spend_i = round(df_invest['‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)'].sum(), 4)
percent_disb_i = round((disb_i / after_i) * 100, 2) if after_i else 0
percent_spend_i = round((spend_i / after_i) * 100, 2) if after_i else 0

color_disb_i = "green" if percent_disb_i > 17 else "red"
color_spend_i = "green" if percent_spend_i > 39 else "red"

col1, col2, col3 = st.columns(3)
with col1:
    st.metric("‡∏û‡∏£‡∏ö. (‡∏•‡∏á‡∏ó‡∏∏‡∏ô)", f"{prb_i:,.4f}")
    st.metric("‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢", f"{spend_i:,.4f}")
with col2:
    st.metric("‡∏á‡∏ö‡∏Ø ‡∏´‡∏•‡∏±‡∏á‡πÇ‡∏≠‡∏ô", f"{after_i:,.4f}")
    st.markdown("<div class='metric-label'> %‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢</div>", unsafe_allow_html=True)
    st.markdown(colored_text(percent_disb_i, color_disb_i), unsafe_allow_html=True)
with col3:
    st.metric("‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢", f"{disb_i:,.4f}")
    st.markdown("<div class='metric-label'> %‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢</div>", unsafe_allow_html=True)
    st.markdown(colored_text(percent_spend_i, color_spend_i), unsafe_allow_html=True)



#----------------------------------------------------------------------------------

# üîπ ‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà 2: Interactive dropdown
st.divider()
st.markdown("<div class='uniform-font'>2Ô∏è‚É£ ‡∏£‡∏≤‡∏¢‡∏Å‡∏£‡∏∞‡∏ó‡∏£‡∏ß‡∏á</div>", unsafe_allow_html=True)

ministries = df1['‡∏Å‡∏£‡∏∞‡∏ó‡∏£‡∏ß‡∏á'].dropna().unique()
selected_ministry = st.selectbox("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Å‡∏£‡∏∞‡∏ó‡∏£‡∏ß‡∏á", ministries)
filtered_df = df1[df1['‡∏Å‡∏£‡∏∞‡∏ó‡∏£‡∏ß‡∏á'] == selected_ministry]

st.markdown(f"<div class='sub-header'> ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢‡∏Ç‡∏≠‡∏á‡∏Å‡∏£‡∏∞‡∏ó‡∏£‡∏ß‡∏á: <code>{selected_ministry}</code></div>", unsafe_allow_html=True)

st.markdown("<div class='sub-header'>üèõÔ∏è ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏°</div>", unsafe_allow_html=True)

sum_prb = round(filtered_df['‡∏û‡∏£‡∏ö.(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)'].sum(), 4)
sum_after = round(filtered_df['‡∏á‡∏ö‡∏Ø ‡∏´‡∏•‡∏±‡∏á‡πÇ‡∏≠‡∏ô(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)'].sum(), 4)
sum_disb = round(filtered_df['‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)'].sum(), 4)
sum_spend = round(filtered_df['‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)'].sum(), 4)
percent_disb = round((sum_disb / sum_after) * 100, 2) if sum_after else 0
percent_spend = round((sum_spend / sum_after) * 100, 2) if sum_after else 0

color_disb = "green" if percent_disb > 27 else "red"
color_spend = "green" if percent_spend > 37 else "red"

col1, col2, col3 = st.columns(3)
with col1:
    st.metric("‡∏û‡∏£‡∏ö.", f"{sum_prb:,.4f}")
with col2:
    st.metric("‡∏á‡∏ö‡∏Ø ‡∏´‡∏•‡∏±‡∏á‡πÇ‡∏≠‡∏ô", f"{sum_after:,.4f}")
with col3:
    st.metric("‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢", f"{sum_disb:,.4f}")

col4, col5, col6 = st.columns(3)
with col4:
    st.metric("‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢", f"{sum_spend:,.4f}")
with col5:
    st.markdown("<div class='metric-label'> %‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢</div>", unsafe_allow_html=True)
    st.markdown(colored_text(percent_disb, color_disb), unsafe_allow_html=True)
with col6:
    st.markdown("<div class='metric-label'> %‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢</div>", unsafe_allow_html=True)
    st.markdown(colored_text(percent_spend, color_spend), unsafe_allow_html=True)

# --- ‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏õ‡∏£‡∏∞‡∏à‡∏≥ ---
st.markdown("<div class='sub-header'>üìú ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏õ‡∏£‡∏∞‡∏à‡∏≥</div>", unsafe_allow_html=True)
df_r = filtered_df[filtered_df['‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏õ‡∏£‡∏∞‡∏à‡∏≥/‡∏•‡∏á‡∏ó‡∏∏‡∏ô'] == "‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏õ‡∏£‡∏∞‡∏à‡∏≥"]
prb_r = round(df_r['‡∏û‡∏£‡∏ö.(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)'].sum(), 4)
after_r = round(df_r['‡∏á‡∏ö‡∏Ø ‡∏´‡∏•‡∏±‡∏á‡πÇ‡∏≠‡∏ô(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)'].sum(), 4)
disb_r = round(df_r['‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)'].sum(), 4)
spend_r = round(df_r['‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)'].sum(), 4)
percent_disb_r = round((disb_r / after_r) * 100, 2) if after_r else 0
percent_spend_r = round((spend_r / after_r) * 100, 2) if after_r else 0

color_disb_r = "green" if percent_disb_r > 35 else "red"
color_spend_r = "green" if percent_spend_r > 36 else "red"

col1, col2, col3 = st.columns(3)
with col1:
    st.metric("‡∏û‡∏£‡∏ö. (‡∏õ‡∏£‡∏∞‡∏à‡∏≥)", f"{prb_r:,.4f}")
with col2:
    st.metric("‡∏á‡∏ö‡∏Ø ‡∏´‡∏•‡∏±‡∏á‡πÇ‡∏≠‡∏ô", f"{after_r:,.4f}")
with col3:
    st.metric("‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢", f"{disb_r:,.4f}")

col4, col5, col6 = st.columns(3)
with col4:
    st.metric("‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢", f"{spend_r:,.4f}")
with col5:
    st.markdown("<div class='metric-label'> %‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢</div>", unsafe_allow_html=True)
    st.markdown(colored_text(percent_disb_r, color_disb_r), unsafe_allow_html=True)
with col6:
    st.markdown("<div class='metric-label'> %‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢</div>", unsafe_allow_html=True)
    st.markdown(colored_text(percent_spend_r, color_spend_r), unsafe_allow_html=True)

# --- ‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏•‡∏á‡∏ó‡∏∏‡∏ô ---
st.markdown("<div class='sub-header'>üèóÔ∏è ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏•‡∏á‡∏ó‡∏∏‡∏ô</div>", unsafe_allow_html=True)
df_i = filtered_df[filtered_df['‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏õ‡∏£‡∏∞‡∏à‡∏≥/‡∏•‡∏á‡∏ó‡∏∏‡∏ô'] == "‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏•‡∏á‡∏ó‡∏∏‡∏ô"]
prb_i = round(df_i['‡∏û‡∏£‡∏ö.(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)'].sum(), 4)
after_i = round(df_i['‡∏á‡∏ö‡∏Ø ‡∏´‡∏•‡∏±‡∏á‡πÇ‡∏≠‡∏ô(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)'].sum(), 4)
disb_i = round(df_i['‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)'].sum(), 4)
spend_i = round(df_i['‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)'].sum(), 4)
percent_disb_i = round((disb_i / after_i) * 100, 2) if after_i else 0
percent_spend_i = round((spend_i / after_i) * 100, 2) if after_i else 0

color_disb_i = "green" if percent_disb_i > 17 else "red"
color_spend_i = "green" if percent_spend_i > 39 else "red"

col1, col2, col3 = st.columns(3)
with col1:
    st.metric("‡∏û‡∏£‡∏ö. (‡∏•‡∏á‡∏ó‡∏∏‡∏ô)", f"{prb_i:,.4f}")
with col2:
    st.metric("‡∏á‡∏ö‡∏Ø ‡∏´‡∏•‡∏±‡∏á‡πÇ‡∏≠‡∏ô", f"{after_i:,.4f}")
with col3:
    st.metric("‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢", f"{disb_i:,.4f}")

col4, col5, col6 = st.columns(3)
with col4:
    st.metric("‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢", f"{spend_i:,.4f}")
with col5:
    st.markdown("<div class='metric-label'>%‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢</div>", unsafe_allow_html=True)
    st.markdown(colored_text(percent_disb_i, color_disb_i), unsafe_allow_html=True)
with col6:
    st.markdown("<div class='metric-label'> %‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢</div>", unsafe_allow_html=True)
    st.markdown(colored_text(percent_spend_i, color_spend_i), unsafe_allow_html=True)
    
#----------------------------------------------------------------------------------

# üîπ ‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà 3: ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢‡∏£‡∏≤‡∏¢‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏á‡∏≤‡∏ô‡πÅ‡∏ö‡∏ö‡πÅ‡∏¢‡∏Å 3 ‡∏™‡πà‡∏ß‡∏ô 
st.divider()
st.markdown("<div class='uniform-font'>3Ô∏è‚É£‡∏£‡∏≤‡∏¢‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏á‡∏≤‡∏ô</div>", unsafe_allow_html=True)

# --- Dropdown ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Å‡∏£‡∏∞‡∏ó‡∏£‡∏ß‡∏á ---
selected_ministry = st.selectbox("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Å‡∏£‡∏∞‡∏ó‡∏£‡∏ß‡∏á (‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏á‡∏≤‡∏ô)", df1['‡∏Å‡∏£‡∏∞‡∏ó‡∏£‡∏ß‡∏á'].dropna().unique())
filtered_df_all = df1[df1['‡∏Å‡∏£‡∏∞‡∏ó‡∏£‡∏ß‡∏á'] == selected_ministry].copy()

# --- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏£‡∏ß‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ---
def aggregate_table(df, exp_type_label):
    group = df.groupby('‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏á‡∏≤‡∏ô').agg({
        '‡∏û‡∏£‡∏ö.(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)': 'sum',
        '‡∏á‡∏ö‡∏Ø ‡∏´‡∏•‡∏±‡∏á‡πÇ‡∏≠‡∏ô(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)': 'sum',
        '‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)': 'sum',
        '‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)': 'sum'
    }).reset_index()

    group['%‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢'] = (group['‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)'] / group['‡∏á‡∏ö‡∏Ø ‡∏´‡∏•‡∏±‡∏á‡πÇ‡∏≠‡∏ô(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)']) * 100
    group['%‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢'] = (group['‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)'] / group['‡∏á‡∏ö‡∏Ø ‡∏´‡∏•‡∏±‡∏á‡πÇ‡∏≠‡∏ô(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)']) * 100
    group['‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó'] = exp_type_label

    # ‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡πÉ‡∏´‡∏°‡πà
    ordered_cols = [
        '‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏á‡∏≤‡∏ô', 
        '‡∏û‡∏£‡∏ö.(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)', 
        '‡∏á‡∏ö‡∏Ø ‡∏´‡∏•‡∏±‡∏á‡πÇ‡∏≠‡∏ô(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)', 
        '‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)', 
        '%‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢', 
        '‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)', 
        '%‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢',
        '‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó'
    ]
    return group[ordered_cols]

# --- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏à‡∏±‡∏î‡∏™‡∏µ‡πÉ‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á ---
def highlight_cells(row):
    style = [''] * len(row)
    disb = row['%‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢']
    spend = row['%‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢']
    exp_type = row.get('‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó', '')

    # %‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢
    if exp_type == "‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏õ‡∏£‡∏∞‡∏à‡∏≥":
        style[4] = 'background-color: lightgreen' if disb > 35 else ('background-color: salmon' if disb < 35 else '')
    elif exp_type == "‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏•‡∏á‡∏ó‡∏∏‡∏ô":
        style[4] = 'background-color: lightgreen' if disb > 17 else ('background-color: salmon' if disb < 17 else '')
    else:
        style[4] = 'background-color: lightgreen' if disb > 27 else ('background-color: salmon' if disb < 27 else '')

    # %‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢
    if exp_type == "‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏õ‡∏£‡∏∞‡∏à‡∏≥":
        style[6] = 'background-color: lightgreen' if spend > 36 else ('background-color: salmon' if spend < 36 else '')
    elif exp_type == "‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏•‡∏á‡∏ó‡∏∏‡∏ô":
        style[6] = 'background-color: lightgreen' if spend > 39 else ('background-color: salmon' if spend < 39 else '')
    else:
        style[6] = 'background-color: lightgreen' if spend > 27 else ('background-color: salmon' if spend < 27 else '')

    return style

# --- ‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà 1: ‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏° ---
st.subheader("üèõÔ∏è ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏°")
df_all = aggregate_table(filtered_df_all, "‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏°")
styled_all = (
    df_all.drop(columns=['‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó'])
    .style
    .format({
        '‡∏û‡∏£‡∏ö.(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)': '{:,.4f}',
        '‡∏á‡∏ö‡∏Ø ‡∏´‡∏•‡∏±‡∏á‡πÇ‡∏≠‡∏ô(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)': '{:,.4f}',
        '‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)': '{:,.4f}',
        '‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)': '{:,.4f}',
        '%‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢': '{:.2f}',
        '%‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢': '{:.2f}'
    })
    .apply(highlight_cells, axis=1)
)
st.dataframe(styled_all, use_container_width=True)

# --- ‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà 2: ‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏õ‡∏£‡∏∞‡∏à‡∏≥ ---
st.subheader("üìú ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏õ‡∏£‡∏∞‡∏à‡∏≥")
df_regular = filtered_df_all[filtered_df_all['‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏õ‡∏£‡∏∞‡∏à‡∏≥/‡∏•‡∏á‡∏ó‡∏∏‡∏ô'] == "‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏õ‡∏£‡∏∞‡∏à‡∏≥"]
df_grouped_regular = aggregate_table(df_regular, "‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏õ‡∏£‡∏∞‡∏à‡∏≥")
styled_regular = (
    df_grouped_regular.drop(columns=['‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó'])
    .style
    .format({
        '‡∏û‡∏£‡∏ö.(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)': '{:,.4f}',
        '‡∏á‡∏ö‡∏Ø ‡∏´‡∏•‡∏±‡∏á‡πÇ‡∏≠‡∏ô(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)': '{:,.4f}',
        '‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)': '{:,.4f}',
        '‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)': '{:,.4f}',
        '%‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢': '{:.2f}',
        '%‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢': '{:.2f}'
    })
    .apply(highlight_cells, axis=1)
)
st.dataframe(styled_regular, use_container_width=True)

# --- ‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà 3: ‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏•‡∏á‡∏ó‡∏∏‡∏ô ---
st.subheader("üèóÔ∏è ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏•‡∏á‡∏ó‡∏∏‡∏ô")
df_invest = filtered_df_all[filtered_df_all['‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏õ‡∏£‡∏∞‡∏à‡∏≥/‡∏•‡∏á‡∏ó‡∏∏‡∏ô'] == "‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏•‡∏á‡∏ó‡∏∏‡∏ô"]
df_grouped_invest = aggregate_table(df_invest, "‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏•‡∏á‡∏ó‡∏∏‡∏ô")
styled_invest = (
    df_grouped_invest.drop(columns=['‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó'])
    .style
    .format({
        '‡∏û‡∏£‡∏ö.(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)': '{:,.4f}',
        '‡∏á‡∏ö‡∏Ø ‡∏´‡∏•‡∏±‡∏á‡πÇ‡∏≠‡∏ô(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)': '{:,.4f}',
        '‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)': '{:,.4f}',
        '‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)': '{:,.4f}',
        '%‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢': '{:.2f}',
        '%‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢': '{:.2f}'
    })
    .apply(highlight_cells, axis=1)
)
st.dataframe(styled_invest, use_container_width=True)

#----------------------------------------------------------------------------------

# üîπ ‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà 4: ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢‡∏£‡∏≤‡∏¢‡∏¢‡∏∏‡∏ó‡∏ò‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå
st.divider()
st.markdown("<div class='uniform-font'>4Ô∏è‚É£ ‡∏£‡∏≤‡∏¢‡∏¢‡∏∏‡∏ó‡∏ò‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå</div>", unsafe_allow_html=True)

# Dropdown ‡∏£‡∏≤‡∏¢‡∏¢‡∏∏‡∏ó‡∏ò‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå
strategy_list = df1['‡∏¢‡∏∏‡∏ó‡∏ò‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏™‡∏£‡∏£'].dropna().unique()
selected_strategy = st.selectbox("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏¢‡∏∏‡∏ó‡∏ò‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå", strategy_list)
filtered_df = df1[df1['‡∏¢‡∏∏‡∏ó‡∏ò‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏™‡∏£‡∏£'] == selected_strategy]

# ‡∏ä‡∏∑‡πà‡∏≠‡∏¢‡∏∏‡∏ó‡∏ò‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
st.markdown(f"<div class='sub-header'> ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢‡∏Ç‡∏≠‡∏á‡∏¢‡∏∏‡∏ó‡∏ò‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå: <code>{selected_strategy}</code></div>", unsafe_allow_html=True)

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏´‡∏°‡∏ß‡∏î
def display_budget_section(title, df, disb_threshold, spend_threshold):
    prb = round(df['‡∏û‡∏£‡∏ö.(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)'].sum(), 4)
    after = round(df['‡∏á‡∏ö‡∏Ø ‡∏´‡∏•‡∏±‡∏á‡πÇ‡∏≠‡∏ô(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)'].sum(), 4)
    disb = round(df['‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)'].sum(), 4)
    spend = round(df['‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)'].sum(), 4)
    percent_disb = round((disb / after) * 100, 2) if after else 0
    percent_spend = round((spend / after) * 100, 2) if after else 0

    st.markdown(f"<div class='sub-header'>{title}</div>", unsafe_allow_html=True)

    col1, col2, col3 = st.columns(3)
    with col1:
        st.metric("‡∏û‡∏£‡∏ö.", f"{prb:,.4f}")
    with col2:
        st.metric("‡∏á‡∏ö‡∏Ø ‡∏´‡∏•‡∏±‡∏á‡πÇ‡∏≠‡∏ô", f"{after:,.4f}")
    with col3:
        st.metric("‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢", f"{disb:,.4f}")

    col4, col5, col6 = st.columns(3)
    with col4:
        st.metric("‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢", f"{spend:,.4f}")
    with col5:
        st.markdown("<div class='metric-label'> %‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢</div>", unsafe_allow_html=True)
        st.markdown(colored_text(percent_disb, 'green' if percent_disb > disb_threshold else 'red'), unsafe_allow_html=True)
    with col6:
        st.markdown("<div class='metric-label'> %‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢</div>", unsafe_allow_html=True)
        st.markdown(colored_text(percent_spend, 'green' if percent_spend > spend_threshold else 'red'), unsafe_allow_html=True)

# ‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà 1: ‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏°
st.markdown("<div class='sub-header'>üèõÔ∏è ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏°</div>", unsafe_allow_html=True)
display_budget_section("‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏°", filtered_df, disb_threshold=27, spend_threshold=37)

# ‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà 2: ‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏õ‡∏£‡∏∞‡∏à‡∏≥
df_r = filtered_df[filtered_df['‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏õ‡∏£‡∏∞‡∏à‡∏≥/‡∏•‡∏á‡∏ó‡∏∏‡∏ô'] == "‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏õ‡∏£‡∏∞‡∏à‡∏≥"]
st.markdown("<div class='sub-header'>üìú ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏õ‡∏£‡∏∞‡∏à‡∏≥</div>", unsafe_allow_html=True)
display_budget_section("‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏õ‡∏£‡∏∞‡∏à‡∏≥", df_r, disb_threshold=35, spend_threshold=36)

# ‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà 3: ‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏•‡∏á‡∏ó‡∏∏‡∏ô
df_i = filtered_df[filtered_df['‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏õ‡∏£‡∏∞‡∏à‡∏≥/‡∏•‡∏á‡∏ó‡∏∏‡∏ô'] == "‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏•‡∏á‡∏ó‡∏∏‡∏ô"]
st.markdown("<div class='sub-header'>üèóÔ∏è ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏•‡∏á‡∏ó‡∏∏‡∏ô</div>", unsafe_allow_html=True)
display_budget_section("‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏•‡∏á‡∏ó‡∏∏‡∏ô", df_i, disb_threshold=17, spend_threshold=39)


#----------------------------------------------------------------------------------

# üîπ ‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà 5: ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì ‡∏à‡∏≥‡πÅ‡∏ô‡∏Å‡∏£‡∏≤‡∏¢‡∏î‡πâ‡∏≤‡∏ô
st.divider()
st.markdown("<div class='uniform-font'>5Ô∏è‚É£ ‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì‡∏£‡∏≤‡∏¢‡∏î‡πâ‡∏≤‡∏ô</div>", unsafe_allow_html=True)

# Dropdown ‡∏£‡∏≤‡∏¢‡∏î‡πâ‡∏≤‡∏ô
dimension_list = df1['‡∏î‡πâ‡∏≤‡∏ô_‡∏•‡∏±‡∏Å‡∏©‡∏ì‡∏∞‡∏á‡∏≤‡∏ô'].dropna().unique()
selected_dimension = st.selectbox("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏î‡πâ‡∏≤‡∏ô/‡∏•‡∏±‡∏Å‡∏©‡∏ì‡∏∞‡∏á‡∏≤‡∏ô", dimension_list)
filtered_df = df1[df1['‡∏î‡πâ‡∏≤‡∏ô_‡∏•‡∏±‡∏Å‡∏©‡∏ì‡∏∞‡∏á‡∏≤‡∏ô'] == selected_dimension]

# ‡∏ä‡∏∑‡πà‡∏≠‡∏î‡πâ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
st.markdown(f"<div class='sub-header'> ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢‡∏Ç‡∏≠‡∏á‡∏î‡πâ‡∏≤‡∏ô: <code>{selected_dimension}</code></div>", unsafe_allow_html=True)

st.markdown("<div class='sub-header'>üèõÔ∏è ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏°</div>", unsafe_allow_html=True)

sum_prb = round(filtered_df['‡∏û‡∏£‡∏ö.(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)'].sum(), 4)
sum_after = round(filtered_df['‡∏á‡∏ö‡∏Ø ‡∏´‡∏•‡∏±‡∏á‡πÇ‡∏≠‡∏ô(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)'].sum(), 4)
sum_disb = round(filtered_df['‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)'].sum(), 4)
sum_spend = round(filtered_df['‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)'].sum(), 4)
percent_disb = round((sum_disb / sum_after) * 100, 2) if sum_after else 0
percent_spend = round((sum_spend / sum_after) * 100, 2) if sum_after else 0

color_disb = "green" if percent_disb > 27 else "red"
color_spend = "green" if percent_spend > 37 else "red"

col1, col2, col3 = st.columns(3)
with col1:
    st.metric("‡∏û‡∏£‡∏ö.", f"{sum_prb:,.4f}")
with col2:
    st.metric("‡∏á‡∏ö‡∏Ø ‡∏´‡∏•‡∏±‡∏á‡πÇ‡∏≠‡∏ô", f"{sum_after:,.4f}")
with col3:
    st.metric("‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢", f"{sum_disb:,.4f}")

col4, col5, col6 = st.columns(3)
with col4:
    st.metric("‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢", f"{sum_spend:,.4f}")
with col5:
    st.markdown("<div class='metric-label'> %‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢</div>", unsafe_allow_html=True)
    st.markdown(colored_text(percent_disb, color_disb), unsafe_allow_html=True)
with col6:
    st.markdown("<div class='metric-label'> %‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢</div>", unsafe_allow_html=True)
    st.markdown(colored_text(percent_spend, color_spend), unsafe_allow_html=True)

# --- ‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏õ‡∏£‡∏∞‡∏à‡∏≥ ---
st.markdown("<div class='sub-header'>üìú ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏õ‡∏£‡∏∞‡∏à‡∏≥</div>", unsafe_allow_html=True)
df_r = filtered_df[filtered_df['‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏õ‡∏£‡∏∞‡∏à‡∏≥/‡∏•‡∏á‡∏ó‡∏∏‡∏ô'] == "‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏õ‡∏£‡∏∞‡∏à‡∏≥"]
prb_r = round(df_r['‡∏û‡∏£‡∏ö.(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)'].sum(), 4)
after_r = round(df_r['‡∏á‡∏ö‡∏Ø ‡∏´‡∏•‡∏±‡∏á‡πÇ‡∏≠‡∏ô(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)'].sum(), 4)
disb_r = round(df_r['‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)'].sum(), 4)
spend_r = round(df_r['‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)'].sum(), 4)
percent_disb_r = round((disb_r / after_r) * 100, 2) if after_r else 0
percent_spend_r = round((spend_r / after_r) * 100, 2) if after_r else 0

color_disb_r = "green" if percent_disb_r > 35 else "red"
color_spend_r = "green" if percent_spend_r > 36 else "red"

col1, col2, col3 = st.columns(3)
with col1:
    st.metric("‡∏û‡∏£‡∏ö. (‡∏õ‡∏£‡∏∞‡∏à‡∏≥)", f"{prb_r:,.4f}")
with col2:
    st.metric("‡∏á‡∏ö‡∏Ø ‡∏´‡∏•‡∏±‡∏á‡πÇ‡∏≠‡∏ô", f"{after_r:,.4f}")
with col3:
    st.metric("‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢", f"{disb_r:,.4f}")

col4, col5, col6 = st.columns(3)
with col4:
    st.metric("‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢", f"{spend_r:,.4f}")
with col5:
    st.markdown("<div class='metric-label'> %‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢</div>", unsafe_allow_html=True)
    st.markdown(colored_text(percent_disb_r, color_disb_r), unsafe_allow_html=True)
with col6:
    st.markdown("<div class='metric-label'> %‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢</div>", unsafe_allow_html=True)
    st.markdown(colored_text(percent_spend_r, color_spend_r), unsafe_allow_html=True)

# --- ‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏•‡∏á‡∏ó‡∏∏‡∏ô ---
st.markdown("<div class='sub-header'>üèóÔ∏è ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏•‡∏á‡∏ó‡∏∏‡∏ô</div>", unsafe_allow_html=True)
df_i = filtered_df[filtered_df['‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏õ‡∏£‡∏∞‡∏à‡∏≥/‡∏•‡∏á‡∏ó‡∏∏‡∏ô'] == "‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏•‡∏á‡∏ó‡∏∏‡∏ô"]
prb_i = round(df_i['‡∏û‡∏£‡∏ö.(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)'].sum(), 4)
after_i = round(df_i['‡∏á‡∏ö‡∏Ø ‡∏´‡∏•‡∏±‡∏á‡πÇ‡∏≠‡∏ô(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)'].sum(), 4)
disb_i = round(df_i['‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)'].sum(), 4)
spend_i = round(df_i['‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)'].sum(), 4)
percent_disb_i = round((disb_i / after_i) * 100, 2) if after_i else 0
percent_spend_i = round((spend_i / after_i) * 100, 2) if after_i else 0

color_disb_i = "green" if percent_disb_i > 17 else "red"
color_spend_i = "green" if percent_spend_i > 39 else "red"

col1, col2, col3 = st.columns(3)
with col1:
    st.metric("‡∏û‡∏£‡∏ö. (‡∏•‡∏á‡∏ó‡∏∏‡∏ô)", f"{prb_i:,.4f}")
with col2:
    st.metric("‡∏á‡∏ö‡∏Ø ‡∏´‡∏•‡∏±‡∏á‡πÇ‡∏≠‡∏ô", f"{after_i:,.4f}")
with col3:
    st.metric("‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢", f"{disb_i:,.4f}")

col4, col5, col6 = st.columns(3)
with col4:
    st.metric("‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢", f"{spend_i:,.4f}")
with col5:
    st.markdown("<div class='metric-label'>%‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢</div>", unsafe_allow_html=True)
    st.markdown(colored_text(percent_disb_i, color_disb_i), unsafe_allow_html=True)
with col6:
    st.markdown("<div class='metric-label'> %‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢</div>", unsafe_allow_html=True)
    st.markdown(colored_text(percent_spend_i, color_spend_i), unsafe_allow_html=True)

#----------------------------------------------------------------------------------
# üîπ ‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà 6: ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏á‡∏ö‡∏Å‡∏•‡∏≤‡∏á
st.divider()
st.markdown("<div class='uniform-font'>6Ô∏è‚É£ ‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏á‡∏ö‡∏Å‡∏•‡∏≤‡∏á</div>", unsafe_allow_html=True)

# --- ‡∏Å‡∏£‡∏≠‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏Å‡∏£‡∏∞‡∏ó‡∏£‡∏ß‡∏á‡∏á‡∏ö‡∏Å‡∏•‡∏≤‡∏á ---
filtered_df_all = df1[df1['‡∏Å‡∏£‡∏∞‡∏ó‡∏£‡∏ß‡∏á'] == "‡∏á‡∏ö‡∏Å‡∏•‡∏≤‡∏á"].copy()

# --- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏£‡∏ß‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ---
def aggregate_table(df, exp_type_label):
    group = df.groupby('‡∏ú‡∏•‡∏ú‡∏•‡∏¥‡∏ï/‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£').agg({
        '‡∏û‡∏£‡∏ö.(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)': 'sum',
        '‡∏á‡∏ö‡∏Ø ‡∏´‡∏•‡∏±‡∏á‡πÇ‡∏≠‡∏ô(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)': 'sum',
        '‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)': 'sum',
        '‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)': 'sum'
    }).reset_index()

    group['%‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢'] = (group['‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)'] / group['‡∏á‡∏ö‡∏Ø ‡∏´‡∏•‡∏±‡∏á‡πÇ‡∏≠‡∏ô(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)']) * 100
    group['%‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢'] = (group['‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)'] / group['‡∏á‡∏ö‡∏Ø ‡∏´‡∏•‡∏±‡∏á‡πÇ‡∏≠‡∏ô(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)']) * 100
    group['‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó'] = exp_type_label

    ordered_cols = [
        '‡∏ú‡∏•‡∏ú‡∏•‡∏¥‡∏ï/‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£',
        '‡∏û‡∏£‡∏ö.(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)',
        '‡∏á‡∏ö‡∏Ø ‡∏´‡∏•‡∏±‡∏á‡πÇ‡∏≠‡∏ô(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)',
        '‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)',
        '%‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢',
        '‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)',
        '%‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢',
        '‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó'
    ]
    return group[ordered_cols].sort_values(by='%‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢', ascending=True)

# --- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏à‡∏±‡∏î‡∏™‡∏µ‡πÉ‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á ---
def highlight_cells(row):
    style = [''] * len(row)
    disb = row['%‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢']
    spend = row['%‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢']
    exp_type = row.get('‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó', '')

    if exp_type == "‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏õ‡∏£‡∏∞‡∏à‡∏≥":
        style[4] = 'background-color: lightgreen' if disb > 35 else ('background-color: salmon' if disb < 35 else '')
    elif exp_type == "‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏•‡∏á‡∏ó‡∏∏‡∏ô":
        style[4] = 'background-color: lightgreen' if disb > 17 else ('background-color: salmon' if disb < 17 else '')
    else:
        style[4] = 'background-color: lightgreen' if disb > 27 else ('background-color: salmon' if disb < 27 else '')

    if exp_type == "‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏õ‡∏£‡∏∞‡∏à‡∏≥":
        style[6] = 'background-color: lightgreen' if spend > 36 else ('background-color: salmon' if spend < 36 else '')
    elif exp_type == "‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏•‡∏á‡∏ó‡∏∏‡∏ô":
        style[6] = 'background-color: lightgreen' if spend > 39 else ('background-color: salmon' if spend < 39 else '')
    else:
        style[6] = 'background-color: lightgreen' if spend > 27 else ('background-color: salmon' if spend < 27 else '')

    return style

# --- ‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà 1: ‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏° ---
st.subheader("üèõÔ∏è ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏°")
df_all = aggregate_table(filtered_df_all, "‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏°")
styled_all = (
    df_all.drop(columns=['‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó'])
    .style
    .format({
        '‡∏û‡∏£‡∏ö.(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)': '{:,.4f}',
        '‡∏á‡∏ö‡∏Ø ‡∏´‡∏•‡∏±‡∏á‡πÇ‡∏≠‡∏ô(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)': '{:,.4f}',
        '‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)': '{:,.4f}',
        '‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)': '{:,.4f}',
        '%‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢': '{:.2f}',
        '%‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢': '{:.2f}'
    })
    .apply(highlight_cells, axis=1)
)
st.dataframe(styled_all, use_container_width=True)

# --- ‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà 2: ‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏õ‡∏£‡∏∞‡∏à‡∏≥ ---
st.subheader("üìú ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏õ‡∏£‡∏∞‡∏à‡∏≥")
df_regular = filtered_df_all[filtered_df_all['‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏õ‡∏£‡∏∞‡∏à‡∏≥/‡∏•‡∏á‡∏ó‡∏∏‡∏ô'] == "‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏õ‡∏£‡∏∞‡∏à‡∏≥"]
df_grouped_regular = aggregate_table(df_regular, "‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏õ‡∏£‡∏∞‡∏à‡∏≥")
styled_regular = (
    df_grouped_regular.drop(columns=['‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó'])
    .style
    .format({
        '‡∏û‡∏£‡∏ö.(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)': '{:,.4f}',
        '‡∏á‡∏ö‡∏Ø ‡∏´‡∏•‡∏±‡∏á‡πÇ‡∏≠‡∏ô(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)': '{:,.4f}',
        '‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)': '{:,.4f}',
        '‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)': '{:,.4f}',
        '%‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢': '{:.2f}',
        '%‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢': '{:.2f}'
    })
    .apply(highlight_cells, axis=1)
)
st.dataframe(styled_regular, use_container_width=True)

# --- ‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà 3: ‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏•‡∏á‡∏ó‡∏∏‡∏ô ---
st.subheader("üèóÔ∏è ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏•‡∏á‡∏ó‡∏∏‡∏ô")
df_invest = filtered_df_all[filtered_df_all['‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏õ‡∏£‡∏∞‡∏à‡∏≥/‡∏•‡∏á‡∏ó‡∏∏‡∏ô'] == "‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏•‡∏á‡∏ó‡∏∏‡∏ô"]
df_grouped_invest = aggregate_table(df_invest, "‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏•‡∏á‡∏ó‡∏∏‡∏ô")
styled_invest = (
    df_grouped_invest.drop(columns=['‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó'])
    .style
    .format({
        '‡∏û‡∏£‡∏ö.(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)': '{:,.4f}',
        '‡∏á‡∏ö‡∏Ø ‡∏´‡∏•‡∏±‡∏á‡πÇ‡∏≠‡∏ô(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)': '{:,.4f}',
        '‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)': '{:,.4f}',
        '‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)': '{:,.4f}',
        '%‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢': '{:.2f}',
        '%‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢': '{:.2f}'
    })
    .apply(highlight_cells, axis=1)
)
st.dataframe(styled_invest, use_container_width=True)

#----------------------------------------------------------------------------------

# üîπ ‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà 7: ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì‡∏ï‡∏≤‡∏°‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÅ‡∏ú‡∏ô‡∏á‡∏≤‡∏ô
st.divider()
st.markdown("<div class='uniform-font'>7Ô∏è‚É£ ‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÅ‡∏ú‡∏ô‡∏á‡∏≤‡∏ô</div>", unsafe_allow_html=True)

# --- Dropdown ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÅ‡∏ú‡∏ô‡∏á‡∏≤‡∏ô ---
selected_group = st.selectbox("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÅ‡∏ú‡∏ô‡∏á‡∏≤‡∏ô", df1['‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÅ‡∏ú‡∏ô‡∏á‡∏≤‡∏ô'].dropna().unique())
filtered_df_all = df1[df1['‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÅ‡∏ú‡∏ô‡∏á‡∏≤‡∏ô'] == selected_group].copy()

# --- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏£‡∏ß‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ---
def aggregate_table(df, exp_type_label):
    group = df.groupby('‡πÅ‡∏ú‡∏ô‡∏á‡∏≤‡∏ô').agg({
        '‡∏û‡∏£‡∏ö.(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)': 'sum',
        '‡∏á‡∏ö‡∏Ø ‡∏´‡∏•‡∏±‡∏á‡πÇ‡∏≠‡∏ô(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)': 'sum',
        '‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)': 'sum',
        '‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)': 'sum'
    }).reset_index()

    group['%‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢'] = (group['‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)'] / group['‡∏á‡∏ö‡∏Ø ‡∏´‡∏•‡∏±‡∏á‡πÇ‡∏≠‡∏ô(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)']) * 100
    group['%‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢'] = (group['‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)'] / group['‡∏á‡∏ö‡∏Ø ‡∏´‡∏•‡∏±‡∏á‡πÇ‡∏≠‡∏ô(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)']) * 100
    group['‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó'] = exp_type_label

    ordered_cols = [
        '‡πÅ‡∏ú‡∏ô‡∏á‡∏≤‡∏ô',
        '‡∏û‡∏£‡∏ö.(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)',
        '‡∏á‡∏ö‡∏Ø ‡∏´‡∏•‡∏±‡∏á‡πÇ‡∏≠‡∏ô(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)',
        '‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)',
        '%‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢',
        '‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)',
        '%‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢',
        '‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó'
    ]
    group = group[ordered_cols]
    group = group.sort_values(by='%‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢', ascending=True)
    return group

# --- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏à‡∏±‡∏î‡∏™‡∏µ‡πÉ‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á ---
def highlight_cells(row):
    style = [''] * len(row)
    disb = row['%‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢']
    spend = row['%‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢']
    exp_type = row.get('‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó', '')

    if exp_type == "‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏õ‡∏£‡∏∞‡∏à‡∏≥":
        style[4] = 'background-color: lightgreen' if disb > 35 else ('background-color: salmon' if disb < 35 else '')
    elif exp_type == "‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏•‡∏á‡∏ó‡∏∏‡∏ô":
        style[4] = 'background-color: lightgreen' if disb > 17 else ('background-color: salmon' if disb < 17 else '')
    else:
        style[4] = 'background-color: lightgreen' if disb > 27 else ('background-color: salmon' if disb < 27 else '')

    if exp_type == "‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏õ‡∏£‡∏∞‡∏à‡∏≥":
        style[6] = 'background-color: lightgreen' if spend > 36 else ('background-color: salmon' if spend < 36 else '')
    elif exp_type == "‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏•‡∏á‡∏ó‡∏∏‡∏ô":
        style[6] = 'background-color: lightgreen' if spend > 39 else ('background-color: salmon' if spend < 39 else '')
    else:
        style[6] = 'background-color: lightgreen' if spend > 27 else ('background-color: salmon' if spend < 27 else '')

    return style

# --- ‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà 1: ‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏° ---
st.subheader("üèõÔ∏è ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏°")
df_all = aggregate_table(filtered_df_all, "‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏°")
styled_all = (
    df_all.drop(columns=['‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó'])
    .style
    .format({
        '‡∏û‡∏£‡∏ö.(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)': '{:,.4f}',
        '‡∏á‡∏ö‡∏Ø ‡∏´‡∏•‡∏±‡∏á‡πÇ‡∏≠‡∏ô(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)': '{:,.4f}',
        '‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)': '{:,.4f}',
        '‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)': '{:,.4f}',
        '%‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢': '{:.2f}',
        '%‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢': '{:.2f}'
    })
    .apply(highlight_cells, axis=1)
)
st.dataframe(styled_all, use_container_width=True)

# --- ‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà 2: ‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏õ‡∏£‡∏∞‡∏à‡∏≥ ---
st.subheader("üìú ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏õ‡∏£‡∏∞‡∏à‡∏≥")
df_regular = filtered_df_all[filtered_df_all['‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏õ‡∏£‡∏∞‡∏à‡∏≥/‡∏•‡∏á‡∏ó‡∏∏‡∏ô'] == "‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏õ‡∏£‡∏∞‡∏à‡∏≥"]
df_grouped_regular = aggregate_table(df_regular, "‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏õ‡∏£‡∏∞‡∏à‡∏≥")
styled_regular = (
    df_grouped_regular.drop(columns=['‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó'])
    .style
    .format({
        '‡∏û‡∏£‡∏ö.(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)': '{:,.4f}',
        '‡∏á‡∏ö‡∏Ø ‡∏´‡∏•‡∏±‡∏á‡πÇ‡∏≠‡∏ô(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)': '{:,.4f}',
        '‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)': '{:,.4f}',
        '‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)': '{:,.4f}',
        '%‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢': '{:.2f}',
        '%‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢': '{:.2f}'
    })
    .apply(highlight_cells, axis=1)
)
st.dataframe(styled_regular, use_container_width=True)

# --- ‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà 3: ‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏•‡∏á‡∏ó‡∏∏‡∏ô ---
st.subheader("üèóÔ∏è ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏•‡∏á‡∏ó‡∏∏‡∏ô")
df_invest = filtered_df_all[filtered_df_all['‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏õ‡∏£‡∏∞‡∏à‡∏≥/‡∏•‡∏á‡∏ó‡∏∏‡∏ô'] == "‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏•‡∏á‡∏ó‡∏∏‡∏ô"]
df_grouped_invest = aggregate_table(df_invest, "‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏•‡∏á‡∏ó‡∏∏‡∏ô")
styled_invest = (
    df_grouped_invest.drop(columns=['‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó'])
    .style
    .format({
        '‡∏û‡∏£‡∏ö.(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)': '{:,.4f}',
        '‡∏á‡∏ö‡∏Ø ‡∏´‡∏•‡∏±‡∏á‡πÇ‡∏≠‡∏ô(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)': '{:,.4f}',
        '‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)': '{:,.4f}',
        '‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)': '{:,.4f}',
        '%‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢': '{:.2f}',
        '%‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢': '{:.2f}'
    })
    .apply(highlight_cells, axis=1)
)
st.dataframe(styled_invest, use_container_width=True)

#----------------------------------------------------------------------------------
# üîπ ‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà 8: ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì‡∏£‡∏≤‡∏¢‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î
st.divider()
st.markdown("<div class='uniform-font'>8Ô∏è‚É£ ‡∏£‡∏≤‡∏¢‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î</div>", unsafe_allow_html=True)

# --- Dropdown ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ---
selected_province = st.selectbox("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î/‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î", df1['‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î/‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î'].dropna().unique())
filtered_df_all = df1[df1['‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î/‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î'] == selected_province].copy()

# --- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏£‡∏ß‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ---
def aggregate_table(df, exp_type_label):
    group = df.groupby('‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏á‡∏≤‡∏ô').agg({
        '‡∏û‡∏£‡∏ö.(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)': 'sum',
        '‡∏á‡∏ö‡∏Ø ‡∏´‡∏•‡∏±‡∏á‡πÇ‡∏≠‡∏ô(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)': 'sum',
        '‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)': 'sum',
        '‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)': 'sum'
    }).reset_index()

    group['%‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢'] = (group['‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)'] / group['‡∏á‡∏ö‡∏Ø ‡∏´‡∏•‡∏±‡∏á‡πÇ‡∏≠‡∏ô(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)']) * 100
    group['%‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢'] = (group['‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)'] / group['‡∏á‡∏ö‡∏Ø ‡∏´‡∏•‡∏±‡∏á‡πÇ‡∏≠‡∏ô(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)']) * 100
    group['‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó'] = exp_type_label

    ordered_cols = [
        '‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏á‡∏≤‡∏ô',
        '‡∏û‡∏£‡∏ö.(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)',
        '‡∏á‡∏ö‡∏Ø ‡∏´‡∏•‡∏±‡∏á‡πÇ‡∏≠‡∏ô(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)',
        '‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)',
        '%‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢',
        '‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)',
        '%‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢',
        '‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó'
    ]
    return group[ordered_cols].sort_values(by='%‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢', ascending=True)

# --- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏à‡∏±‡∏î‡∏™‡∏µ‡πÉ‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á ---
def highlight_cells(row):
    style = [''] * len(row)
    disb = row['%‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢']
    spend = row['%‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢']
    exp_type = row.get('‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó', '')

    if exp_type == "‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏õ‡∏£‡∏∞‡∏à‡∏≥":
        style[4] = 'background-color: lightgreen' if disb > 35 else ('background-color: salmon' if disb < 35 else '')
    elif exp_type == "‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏•‡∏á‡∏ó‡∏∏‡∏ô":
        style[4] = 'background-color: lightgreen' if disb > 17 else ('background-color: salmon' if disb < 17 else '')
    else:
        style[4] = 'background-color: lightgreen' if disb > 27 else ('background-color: salmon' if disb < 27 else '')

    if exp_type == "‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏õ‡∏£‡∏∞‡∏à‡∏≥":
        style[6] = 'background-color: lightgreen' if spend > 36 else ('background-color: salmon' if spend < 36 else '')
    elif exp_type == "‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏•‡∏á‡∏ó‡∏∏‡∏ô":
        style[6] = 'background-color: lightgreen' if spend > 39 else ('background-color: salmon' if spend < 39 else '')
    else:
        style[6] = 'background-color: lightgreen' if spend > 27 else ('background-color: salmon' if spend < 27 else '')

    return style

# --- ‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà 1: ‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏° ---
st.subheader("üèõÔ∏è ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏°")
df_all = aggregate_table(filtered_df_all, "‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏°")
styled_all = (
    df_all.drop(columns=['‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó'])
    .style
    .format({
        '‡∏û‡∏£‡∏ö.(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)': '{:,.4f}',
        '‡∏á‡∏ö‡∏Ø ‡∏´‡∏•‡∏±‡∏á‡πÇ‡∏≠‡∏ô(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)': '{:,.4f}',
        '‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)': '{:,.4f}',
        '‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)': '{:,.4f}',
        '%‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢': '{:.2f}',
        '%‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢': '{:.2f}'
    })
    .apply(highlight_cells, axis=1)
)
st.dataframe(styled_all, use_container_width=True)

# --- ‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà 2: ‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏õ‡∏£‡∏∞‡∏à‡∏≥ ---
st.subheader("üìú ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏õ‡∏£‡∏∞‡∏à‡∏≥")
df_regular = filtered_df_all[filtered_df_all['‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏õ‡∏£‡∏∞‡∏à‡∏≥/‡∏•‡∏á‡∏ó‡∏∏‡∏ô'] == "‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏õ‡∏£‡∏∞‡∏à‡∏≥"]
df_grouped_regular = aggregate_table(df_regular, "‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏õ‡∏£‡∏∞‡∏à‡∏≥")
styled_regular = (
    df_grouped_regular.drop(columns=['‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó'])
    .style
    .format({
        '‡∏û‡∏£‡∏ö.(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)': '{:,.4f}',
        '‡∏á‡∏ö‡∏Ø ‡∏´‡∏•‡∏±‡∏á‡πÇ‡∏≠‡∏ô(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)': '{:,.4f}',
        '‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)': '{:,.4f}',
        '‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)': '{:,.4f}',
        '%‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢': '{:.2f}',
        '%‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢': '{:.2f}'
    })
    .apply(highlight_cells, axis=1)
)
st.dataframe(styled_regular, use_container_width=True)

# --- ‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà 3: ‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏•‡∏á‡∏ó‡∏∏‡∏ô ---
st.subheader("üèóÔ∏è ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏•‡∏á‡∏ó‡∏∏‡∏ô")
df_invest = filtered_df_all[filtered_df_all['‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏õ‡∏£‡∏∞‡∏à‡∏≥/‡∏•‡∏á‡∏ó‡∏∏‡∏ô'] == "‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏•‡∏á‡∏ó‡∏∏‡∏ô"]
df_grouped_invest = aggregate_table(df_invest, "‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏•‡∏á‡∏ó‡∏∏‡∏ô")
styled_invest = (
    df_grouped_invest.drop(columns=['‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó'])
    .style
    .format({
        '‡∏û‡∏£‡∏ö.(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)': '{:,.4f}',
        '‡∏á‡∏ö‡∏Ø ‡∏´‡∏•‡∏±‡∏á‡πÇ‡∏≠‡∏ô(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)': '{:,.4f}',
        '‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)': '{:,.4f}',
        '‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)': '{:,.4f}',
        '%‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢': '{:.2f}',
        '%‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢': '{:.2f}'
    })
    .apply(highlight_cells, axis=1)
)
st.dataframe(styled_invest, use_container_width=True)
#----------------------------------------------------------------------------------
# üîπ ‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà 9: ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì‡∏Ç‡∏≠‡∏á‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏á‡∏≤‡∏ô‡∏£‡∏±‡∏ê‡∏™‡∏†‡∏≤
st.divider()
st.markdown("<div class='uniform-font'>9Ô∏è‚É£ ‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏á‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡∏£‡∏±‡∏ê‡∏™‡∏†‡∏≤</div>", unsafe_allow_html=True)

# --- Dropdown ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏á‡∏≤‡∏ô ---
filtered_df_base = df1[df1['‡∏Å‡∏£‡∏∞‡∏ó‡∏£‡∏ß‡∏á'] == "‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏á‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡∏£‡∏±‡∏ê‡∏™‡∏†‡∏≤"]
selected_agency = st.selectbox("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏á‡∏≤‡∏ô", filtered_df_base['‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏á‡∏≤‡∏ô'].dropna().unique())
filtered_df_all = filtered_df_base[filtered_df_base['‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏á‡∏≤‡∏ô'] == selected_agency].copy()

# --- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏£‡∏ß‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ---
def aggregate_table(df, exp_type_label):
    group = df.groupby('‡∏ú‡∏•‡∏ú‡∏•‡∏¥‡∏ï/‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£').agg({
        '‡∏û‡∏£‡∏ö.(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)': 'sum',
        '‡∏á‡∏ö‡∏Ø ‡∏´‡∏•‡∏±‡∏á‡πÇ‡∏≠‡∏ô(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)': 'sum',
        '‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)': 'sum',
        '‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)': 'sum'
    }).reset_index()

    group['%‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢'] = (group['‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)'] / group['‡∏á‡∏ö‡∏Ø ‡∏´‡∏•‡∏±‡∏á‡πÇ‡∏≠‡∏ô(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)']) * 100
    group['%‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢'] = (group['‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)'] / group['‡∏á‡∏ö‡∏Ø ‡∏´‡∏•‡∏±‡∏á‡πÇ‡∏≠‡∏ô(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)']) * 100
    group['‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó'] = exp_type_label

    ordered_cols = [
        '‡∏ú‡∏•‡∏ú‡∏•‡∏¥‡∏ï/‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£',
        '‡∏û‡∏£‡∏ö.(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)',
        '‡∏á‡∏ö‡∏Ø ‡∏´‡∏•‡∏±‡∏á‡πÇ‡∏≠‡∏ô(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)',
        '‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)',
        '%‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢',
        '‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)',
        '%‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢',
        '‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó'
    ]
    return group[ordered_cols].sort_values(by='%‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢', ascending=True)

# --- ‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà 1: ‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏° ---
st.subheader("üèõÔ∏è ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏°")
df_all = aggregate_table(filtered_df_all, "‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏°")
styled_all = (
    df_all.drop(columns=['‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó'])
    .style
    .format({
        '‡∏û‡∏£‡∏ö.(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)': '{:,.4f}',
        '‡∏á‡∏ö‡∏Ø ‡∏´‡∏•‡∏±‡∏á‡πÇ‡∏≠‡∏ô(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)': '{:,.4f}',
        '‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)': '{:,.4f}',
        '‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)': '{:,.4f}',
        '%‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢': '{:.2f}',
        '%‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢': '{:.2f}'
    })
    .apply(highlight_cells, axis=1)
)
st.dataframe(styled_all, use_container_width=True)

# --- ‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà 2: ‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏õ‡∏£‡∏∞‡∏à‡∏≥ ---
st.subheader("üìú ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏õ‡∏£‡∏∞‡∏à‡∏≥")
df_regular = filtered_df_all[filtered_df_all['‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏õ‡∏£‡∏∞‡∏à‡∏≥/‡∏•‡∏á‡∏ó‡∏∏‡∏ô'] == "‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏õ‡∏£‡∏∞‡∏à‡∏≥"]
df_grouped_regular = aggregate_table(df_regular, "‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏õ‡∏£‡∏∞‡∏à‡∏≥")
styled_regular = (
    df_grouped_regular.drop(columns=['‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó'])
    .style
    .format({
        '‡∏û‡∏£‡∏ö.(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)': '{:,.4f}',
        '‡∏á‡∏ö‡∏Ø ‡∏´‡∏•‡∏±‡∏á‡πÇ‡∏≠‡∏ô(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)': '{:,.4f}',
        '‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)': '{:,.4f}',
        '‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)': '{:,.4f}',
        '%‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢': '{:.2f}',
        '%‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢': '{:.2f}'
    })
    .apply(highlight_cells, axis=1)
)
st.dataframe(styled_regular, use_container_width=True)

# --- ‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà 3: ‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏•‡∏á‡∏ó‡∏∏‡∏ô ---
st.subheader("üèóÔ∏è ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏•‡∏á‡∏ó‡∏∏‡∏ô")
df_invest = filtered_df_all[filtered_df_all['‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏õ‡∏£‡∏∞‡∏à‡∏≥/‡∏•‡∏á‡∏ó‡∏∏‡∏ô'] == "‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏•‡∏á‡∏ó‡∏∏‡∏ô"]
df_grouped_invest = aggregate_table(df_invest, "‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏•‡∏á‡∏ó‡∏∏‡∏ô")
styled_invest = (
    df_grouped_invest.drop(columns=['‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó'])
    .style
    .format({
        '‡∏û‡∏£‡∏ö.(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)': '{:,.4f}',
        '‡∏á‡∏ö‡∏Ø ‡∏´‡∏•‡∏±‡∏á‡πÇ‡∏≠‡∏ô(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)': '{:,.4f}',
        '‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)': '{:,.4f}',
        '‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)': '{:,.4f}',
        '%‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢': '{:.2f}',
        '%‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢': '{:.2f}'
    })
    .apply(highlight_cells, axis=1)
)
st.dataframe(styled_invest, use_container_width=True)

#----------------------------------------------------------------------------------
# üîπ ‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà 10: ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢‡∏£‡∏≤‡∏¢‡∏£‡∏´‡∏±‡∏™‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì (‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£)
st.divider()
st.markdown("<div class='uniform-font'>üîü ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢‡∏£‡∏≤‡∏¢‡∏£‡∏´‡∏±‡∏™‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì (‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£)</div>", unsafe_allow_html=True)

# --- ‡∏ä‡πà‡∏≠‡∏á‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Å‡∏£‡∏≠‡∏á‡∏ä‡∏∑‡πà‡∏≠‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£ ---
search_text = st.text_input("üîç ‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ñ‡∏≥‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£")

# --- ‡∏Å‡∏£‡∏≠‡∏á‡∏ä‡∏∑‡πà‡∏≠‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£‡∏ï‡∏≤‡∏°‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ ---
project_options = df1['‡∏ú‡∏•‡∏ú‡∏•‡∏¥‡∏ï/‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£'].dropna().unique()
filtered_options = [proj for proj in project_options if search_text.lower() in proj.lower()]
selected_project = st.selectbox("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•", filtered_options)

# --- ‡∏Å‡∏£‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏≤‡∏°‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å ---
filtered_df_all = df1[df1['‡∏ú‡∏•‡∏ú‡∏•‡∏¥‡∏ï/‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£'] == selected_project].copy()

# --- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏£‡∏ß‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ---
def aggregate_table(df, exp_type_label):
    group = df.groupby('‡∏ä‡∏∑‡πà‡∏≠‡∏£‡∏´‡∏±‡∏™‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì').agg({
        '‡∏û‡∏£‡∏ö.(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)': 'sum',
        '‡∏á‡∏ö‡∏Ø ‡∏´‡∏•‡∏±‡∏á‡πÇ‡∏≠‡∏ô(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)': 'sum',
        '‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)': 'sum',
        '‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)': 'sum'
    }).reset_index()

    group['%‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢'] = (group['‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)'] / group['‡∏á‡∏ö‡∏Ø ‡∏´‡∏•‡∏±‡∏á‡πÇ‡∏≠‡∏ô(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)']) * 100
    group['%‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢'] = (group['‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)'] / group['‡∏á‡∏ö‡∏Ø ‡∏´‡∏•‡∏±‡∏á‡πÇ‡∏≠‡∏ô(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)']) * 100
    group['‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó'] = exp_type_label

    return group[[
        '‡∏ä‡∏∑‡πà‡∏≠‡∏£‡∏´‡∏±‡∏™‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì',
        '‡∏û‡∏£‡∏ö.(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)',
        '‡∏á‡∏ö‡∏Ø ‡∏´‡∏•‡∏±‡∏á‡πÇ‡∏≠‡∏ô(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)',
        '‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)',
        '%‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢',
        '‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)',
        '%‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢',
        '‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó'
    ]]

# --- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÑ‡∏Æ‡πÑ‡∏•‡∏ï‡πå ---
def highlight_cells(row):
    style = [''] * len(row)
    disb = row['%‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢']
    spend = row['%‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢']
    exp_type = row.get('‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó', '')

    if exp_type == "‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏õ‡∏£‡∏∞‡∏à‡∏≥":
        style[4] = 'background-color: lightgreen' if disb > 35 else 'background-color: salmon'
        style[6] = 'background-color: lightgreen' if spend > 36 else 'background-color: salmon'
    elif exp_type == "‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏•‡∏á‡∏ó‡∏∏‡∏ô":
        style[4] = 'background-color: lightgreen' if disb > 17 else 'background-color: salmon'
        style[6] = 'background-color: lightgreen' if spend > 39 else 'background-color: salmon'
    else:
        style[4] = 'background-color: lightgreen' if disb > 27 else 'background-color: salmon'
        style[6] = 'background-color: lightgreen' if spend > 27 else 'background-color: salmon'

    return style

# --- ‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà 1: ‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏° ---
st.subheader("üèõÔ∏è ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏°")
df_all = aggregate_table(filtered_df_all, "‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏°")
styled_all = (
    df_all.drop(columns=['‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó'])
    .style
    .format({
        '‡∏û‡∏£‡∏ö.(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)': '{:,.4f}',
        '‡∏á‡∏ö‡∏Ø ‡∏´‡∏•‡∏±‡∏á‡πÇ‡∏≠‡∏ô(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)': '{:,.4f}',
        '‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)': '{:,.4f}',
        '‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)': '{:,.4f}',
        '%‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢': '{:.2f}',
        '%‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢': '{:.2f}'
    })
    .apply(highlight_cells, axis=1)
)
st.dataframe(styled_all, use_container_width=True)

# --- ‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà 2: ‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏õ‡∏£‡∏∞‡∏à‡∏≥ ---
st.subheader("üìú ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏õ‡∏£‡∏∞‡∏à‡∏≥")
df_regular = filtered_df_all[filtered_df_all['‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏õ‡∏£‡∏∞‡∏à‡∏≥/‡∏•‡∏á‡∏ó‡∏∏‡∏ô'] == "‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏õ‡∏£‡∏∞‡∏à‡∏≥"]
df_grouped_regular = aggregate_table(df_regular, "‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏õ‡∏£‡∏∞‡∏à‡∏≥")
styled_regular = (
    df_grouped_regular.drop(columns=['‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó'])
    .style
    .format({
        '‡∏û‡∏£‡∏ö.(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)': '{:,.4f}',
        '‡∏á‡∏ö‡∏Ø ‡∏´‡∏•‡∏±‡∏á‡πÇ‡∏≠‡∏ô(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)': '{:,.4f}',
        '‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)': '{:,.4f}',
        '‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)': '{:,.4f}',
        '%‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢': '{:.2f}',
        '%‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢': '{:.2f}'
    })
    .apply(highlight_cells, axis=1)
)
st.dataframe(styled_regular, use_container_width=True)

# --- ‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà 3: ‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏•‡∏á‡∏ó‡∏∏‡∏ô ---
st.subheader("üèóÔ∏è ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏•‡∏á‡∏ó‡∏∏‡∏ô")
df_invest = filtered_df_all[filtered_df_all['‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏õ‡∏£‡∏∞‡∏à‡∏≥/‡∏•‡∏á‡∏ó‡∏∏‡∏ô'] == "‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏•‡∏á‡∏ó‡∏∏‡∏ô"]
df_grouped_invest = aggregate_table(df_invest, "‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏•‡∏á‡∏ó‡∏∏‡∏ô")
styled_invest = (
    df_grouped_invest.drop(columns=['‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó'])
    .style
    .format({
        '‡∏û‡∏£‡∏ö.(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)': '{:,.4f}',
        '‡∏á‡∏ö‡∏Ø ‡∏´‡∏•‡∏±‡∏á‡πÇ‡∏≠‡∏ô(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)': '{:,.4f}',
        '‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)': '{:,.4f}',
        '‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢(‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó)': '{:,.4f}',
        '%‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢': '{:.2f}',
        '%‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢': '{:.2f}'
    })
    .apply(highlight_cells, axis=1)
)
st.dataframe(styled_invest, use_container_width=True)



#----------------------------------------------------------------------------------