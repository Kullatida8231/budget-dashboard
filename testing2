# ‚úÖ ‡∏™‡πà‡∏ß‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏ï‡∏≤‡∏°‡πÄ‡∏°‡∏ô‡∏π
if "1Ô∏è‚É£ ‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®" in selected_menus:
    st.markdown("## 1Ô∏è‚É£‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®")

    # ‡∏™‡∏£‡∏∏‡∏õ‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏°
    total_all = compute_summary(df)
    total_regular = compute_summary(df[df['‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏õ‡∏£‡∏∞‡∏à‡∏≥/‡∏•‡∏á‡∏ó‡∏∏‡∏ô'] == "‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏õ‡∏£‡∏∞‡∏à‡∏≥"])
    total_invest = compute_summary(df[df['‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏õ‡∏£‡∏∞‡∏à‡∏≥/‡∏•‡∏á‡∏ó‡∏∏‡∏ô'] == "‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏•‡∏á‡∏ó‡∏∏‡∏ô"])

    # ‡πÅ‡∏™‡∏î‡∏á Metric
    show_metrics(total_all, "üìä ‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏°")
    show_metrics(total_regular, "üè¢ ‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏õ‡∏£‡∏∞‡∏à‡∏≥")
    show_metrics(total_invest, "üèóÔ∏è ‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏•‡∏á‡∏ó‡∏∏‡∏ô")
    st.markdown("<br>", unsafe_allow_html=True)

#--------------------------------------------------------------

# üîß ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÑ‡∏Æ‡πÑ‡∏•‡∏ï‡πå
def prepare_table(df_part, category="‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏°"):
    df_part = df_part.groupby("‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏á‡∏≤‡∏ô")[["‡∏û‡∏£‡∏ö.", "‡∏á‡∏ö‡∏Ø ‡∏´‡∏•‡∏±‡∏á‡πÇ‡∏≠‡∏ô", "‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢", "‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢"]].sum().reset_index()
    df_part["%‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢"] = (df_part["‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢"] / df_part["‡∏á‡∏ö‡∏Ø ‡∏´‡∏•‡∏±‡∏á‡πÇ‡∏≠‡∏ô"]) * 100
    df_part["%‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢"] = (df_part["‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢"] / df_part["‡∏á‡∏ö‡∏Ø ‡∏´‡∏•‡∏±‡∏á‡πÇ‡∏≠‡∏ô"]) * 100
    cols = ["‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏á‡∏≤‡∏ô", "‡∏û‡∏£‡∏ö.", "‡∏á‡∏ö‡∏Ø ‡∏´‡∏•‡∏±‡∏á‡πÇ‡∏≠‡∏ô", "‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢", "%‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢", "‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢", "%‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢"]
    df_part = df_part[cols]

    def highlight(row):
        color_disb = get_color(row["%‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢"], category, "‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢")
        color_spend = get_color(row["%‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢"], category, "‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢")
        return ["", "", "", "", f"color: {color_disb}", "", f"color: {color_spend}"]

    styled_df = df_part.style.format({
        "‡∏û‡∏£‡∏ö.": "{:,.4f}",
        "‡∏á‡∏ö‡∏Ø ‡∏´‡∏•‡∏±‡∏á‡πÇ‡∏≠‡∏ô": "{:,.4f}",
        "‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢": "{:,.4f}",
        "‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢": "{:,.4f}",
        "%‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢": "{:,.2f}%",
        "%‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢": "{:,.2f}%"
    }).apply(highlight, axis=1)

    return styled_df


# üîß ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏£‡∏∏‡∏õ‡∏Ñ‡πà‡∏≤‡∏ï‡∏≤‡∏° DataFrame
def compute_summary(df):
    total_prb = df["‡∏û‡∏£‡∏ö."].sum()
    total_after = df["‡∏á‡∏ö‡∏Ø ‡∏´‡∏•‡∏±‡∏á‡πÇ‡∏≠‡∏ô"].sum()
    total_disb = df["‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢"].sum()
    total_spend = df["‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢"].sum()
    percent_disb = round((total_disb / total_after) * 100, 2) if total_after else 0
    percent_spend = round((total_spend / total_after) * 100, 2) if total_after else 0
    return total_prb, total_after, total_disb, percent_disb, total_spend, percent_spend

#---------------------------------------------------------------------------
# üîß ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏™‡∏µ‡∏ï‡∏≤‡∏°‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢
def get_color(value, category, target_type):
    """
    category: '‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏°', '‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏õ‡∏£‡∏∞‡∏à‡∏≥', '‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏•‡∏á‡∏ó‡∏∏‡∏ô'
    target_type: '‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢' ‡∏´‡∏£‡∏∑‡∏≠ '‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢'
    """
    thresholds = {
        "‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏°": {"‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢": 87.67, "‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢": 93.33},
        "‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏õ‡∏£‡∏∞‡∏à‡∏≥": {"‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢": 92, "‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢": 93.67},
        "‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏•‡∏á‡∏ó‡∏∏‡∏ô": {"‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢": 71.33, "‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢": 92.33},
    }
    threshold = thresholds.get(category, {}).get(target_type, 0)
    return "#00FF9F" if value >= threshold else "#FF4B4B"
